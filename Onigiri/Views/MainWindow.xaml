<Window x:Class="Finalspace.Onigiri.Views.MainWindow"
              xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
              xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
              xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
              xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
              xmlns:dxmvvm="http://schemas.devexpress.com/winfx/2008/xaml/mvvm"
              xmlns:viewmodels="clr-namespace:Finalspace.Onigiri.ViewModels"
              xmlns:converters="clr-namespace:Finalspace.Onigiri.Converters"
              mc:Ignorable="d"
              Title="Onigiri" d:Height="600" d:Width="800" Icon="../Resources/onigiri.ico"
              d:DataContext="{d:DesignInstance viewmodels:MainViewModel}">
    <dxmvvm:Interaction.Behaviors>
        <dxmvvm:DispatcherService />
        <dxmvvm:OpenFileDialogService />
        <dxmvvm:SaveFileDialogService />
        <dxmvvm:EventToCommand EventName="Loaded" Command="{Binding OnLoadedCommand}" />
    </dxmvvm:Interaction.Behaviors>
    
    <DockPanel LastChildFill="True">
        <Menu DockPanel.Dock="Top">
            <MenuItem Header="File">
                <MenuItem Header="Create..." Command="{Binding CmdCreate}">
                    <MenuItem.Icon>
                        <Image Source="/Resources/new_32x32.png" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="Import..." Command="{Binding CmdImport}">
                    <MenuItem.Icon>
                        <Image Source="/Resources/download_to_local_store_32x32.png" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="Export..." Command="{Binding CmdExport}">
                    <MenuItem.Icon>
                        <Image Source="/Resources/download_to_local_store_32x32.png" />
                    </MenuItem.Icon>
                </MenuItem>
                <Separator />
                <MenuItem Header="Settings" Command="{Binding CmdSettings}">
                    <MenuItem.Icon>
                        <Image Source="/Resources/customization_32x32.png" />
                    </MenuItem.Icon>
                </MenuItem>
                <Separator />
                <MenuItem Header="About" Command="{Binding CmdAbout}">
                    <MenuItem.Icon>
                        <Image Source="/Resources/info_32x32.png" />
                    </MenuItem.Icon>
                </MenuItem>
                <Separator />
                <MenuItem Header="Exit" Command="{Binding CmdExit}">
                    <MenuItem.Icon>
                        <Image Source="/Resources/close_32x32.png" />
                    </MenuItem.Icon>
                </MenuItem>
            </MenuItem>
            <MenuItem Header="Data">
                <MenuItem Header="Reload Database" Command="{Binding CmdRefresh}">
                    <MenuItem.Icon>
                        <Image Source="/Resources/refresh_32x32.png" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="Rebuild Database" Command="{Binding CmdUpdate}" CommandParameter="Database">
                    <MenuItem.Icon>
                        <Image Source="/Resources/rebuild_database_32x32.png" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="Update folders from local storage" Command="{Binding CmdUpdate}" CommandParameter="Store">
                    <MenuItem.Icon>
                        <Image Source="/Resources/download_to_local_store_32x32.png" />
                    </MenuItem.Icon>
                </MenuItem>
            </MenuItem>
            <MenuItem Header="View">
                <MenuItem Header="Theme">
                    <MenuItem Header="Automatic" Command="{Binding CmdChangeTheme}" CommandParameter="{x:Static viewmodels:MainTheme.Automatic}" IsChecked="{Binding Theme, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource themeBoolConv}, ConverterParameter={x:Static viewmodels:MainTheme.Automatic}}">
                        <MenuItem.Icon>
                            <Image Source="/Resources/darkmode_trigger_32x32.png" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="Light" Command="{Binding CmdChangeTheme}" CommandParameter="{x:Static viewmodels:MainTheme.Light}" IsChecked="{Binding Theme, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource themeBoolConv}, ConverterParameter={x:Static viewmodels:MainTheme.Light}}">
                        <MenuItem.Icon>
                            <Image Source="/Resources/sun_32x32.png" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="Dark" Command="{Binding CmdChangeTheme}" CommandParameter="{x:Static viewmodels:MainTheme.Dark}" IsChecked="{Binding Theme, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource themeBoolConv}, ConverterParameter={x:Static viewmodels:MainTheme.Dark}}">
                        <MenuItem.Icon>
                            <Image Source="/Resources/moon_32x32.png" />
                        </MenuItem.Icon>
                    </MenuItem>
                </MenuItem>
                <MenuItem Header="Sort" IsEnabled="{Binding IsNotLoading, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}">
                    <MenuItem Header="Show" IsCheckable="True" IsChecked="{Binding ShowSorting, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    <Separator />
                    <MenuItem Header="Primary">
                        <MenuItem Header="Type" ItemsSource="{Binding SortItems}">
                            <MenuItem.ItemTemplate>
                                <DataTemplate>
                                    <MenuItem Header="{Binding DisplayName}" Command="{Binding DataContext.CmdPrimarySortType, RelativeSource={RelativeSource AncestorType=Window, Mode=FindAncestor}}" CommandParameter="{Binding}">
                                        <MenuItem.Style>
                                            <Style TargetType="MenuItem">
                                                <Setter Property="IsChecked" Value="False" />
                                                <Style.Triggers>
                                                    <DataTrigger Value="True">
                                                        <DataTrigger.Binding>
                                                            <MultiBinding Converter="{converters:ReferenceEqualsToBooleanMultiConverter}">
                                                                <Binding Path="DataContext.FirstSortKey" RelativeSource="{RelativeSource AncestorType=Window, Mode=FindAncestor}" UpdateSourceTrigger="PropertyChanged" />
                                                                <Binding />
                                                            </MultiBinding>
                                                        </DataTrigger.Binding>
                                                        <Setter Property="IsChecked" Value="True" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </MenuItem.Style>
                                    </MenuItem>
                                </DataTemplate>
                            </MenuItem.ItemTemplate>
                        </MenuItem>
                        <MenuItem Header="Descending" IsCheckable="True" IsChecked="{Binding IsFirstSortOrderDesc, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    </MenuItem>
                    <MenuItem Header="Secondary">
                        <MenuItem Header="Type" ItemsSource="{Binding SortItems}">
                            <MenuItem.ItemTemplate>
                                <DataTemplate>
                                    <MenuItem Header="{Binding DisplayName}" Command="{Binding DataContext.CmdSecondarySortType, RelativeSource={RelativeSource AncestorType=Window, Mode=FindAncestor}}" CommandParameter="{Binding}">
                                        <MenuItem.Style>
                                            <Style TargetType="MenuItem">
                                                <Setter Property="IsChecked" Value="False" />
                                                <Style.Triggers>
                                                    <DataTrigger Value="True">
                                                        <DataTrigger.Binding>
                                                            <MultiBinding Converter="{converters:ReferenceEqualsToBooleanMultiConverter}">
                                                                <Binding Path="DataContext.SecondSortKey" RelativeSource="{RelativeSource AncestorType=Window, Mode=FindAncestor}" UpdateSourceTrigger="PropertyChanged" />
                                                                <Binding />
                                                            </MultiBinding>
                                                        </DataTrigger.Binding>
                                                        <Setter Property="IsChecked" Value="True" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </MenuItem.Style>
                                    </MenuItem>
                                </DataTemplate>
                            </MenuItem.ItemTemplate>
                        </MenuItem>
                        <MenuItem Header="Descending" IsCheckable="True" IsChecked="{Binding IsSecondSortOrderDesc, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    </MenuItem>
                </MenuItem>
                <MenuItem Header="Filter" IsEnabled="{Binding IsNotLoading, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}">
                    <MenuItem Header="Show" IsCheckable="True" IsChecked="{Binding ShowFilter, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    <Separator />
                    <MenuItem Header="Type" ItemsSource="{Binding AnimeTypes}">
                        <MenuItem.ItemTemplate>
                            <DataTemplate>
                                <MenuItem Header="{Binding Name}" Command="{Binding DataContext.CmdChangeFilterType, RelativeSource={RelativeSource AncestorType=Window, Mode=FindAncestor}}" CommandParameter="{Binding}">
                                    <MenuItem.Style>
                                        <Style TargetType="MenuItem">
                                            <Setter Property="IsChecked" Value="False" />
                                            <Style.Triggers>
                                                <DataTrigger Value="True">
                                                    <DataTrigger.Binding>
                                                        <MultiBinding Converter="{converters:ReferenceEqualsToBooleanMultiConverter}">
                                                            <Binding Path="DataContext.FilterType" RelativeSource="{RelativeSource AncestorType=Window, Mode=FindAncestor}" />
                                                            <Binding />
                                                        </MultiBinding>
                                                    </DataTrigger.Binding>
                                                    <Setter Property="IsChecked" Value="True" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </MenuItem.Style>
                                </MenuItem>
                            </DataTemplate>
                        </MenuItem.ItemTemplate>
                    </MenuItem>
                </MenuItem>
            </MenuItem>
            <MenuItem Header="Window">
                <MenuItem Header="Titles" Command="{Binding CmdTitles}">
                    <MenuItem.Icon>
                        <Image Source="/Resources/titles_32x32.png" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="Issues" Command="{Binding CmdIssues}">
                    <MenuItem.Icon>
                        <Image Source="/Resources/suggestion_32x32.png" />
                    </MenuItem.Icon>
                </MenuItem>
            </MenuItem>
        </Menu>

        <Grid DockPanel.Dock="Top">
            <StackPanel Orientation="Vertical">
                <GroupBox Header="Sorting" IsEnabled="{Binding IsNotLoading, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" Visibility="{Binding ShowSorting, UpdateSourceTrigger=PropertyChanged, Converter={dxmvvm:BooleanToVisibilityConverter}}">
                    <StackPanel Orientation="Horizontal">
                        <GroupBox Header="Primary">
                            <StackPanel Orientation="Horizontal">
                                <ComboBox Grid.Column="0" Width="150" ItemsSource="{Binding SortItems}" DisplayMemberPath="DisplayName" SelectedItem="{Binding FirstSortKey, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" IsSynchronizedWithCurrentItem="True" Style="{StaticResource fiterCombobox}" />
                                <CheckBox Grid.Column="1" Content="Descending" IsChecked="{Binding IsFirstSortOrderDesc, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Command="{Binding CmdChangedSort}" Style="{StaticResource fiterCheckbox}" />
                            </StackPanel>
                        </GroupBox>
                        <GroupBox Header="Secondary">
                            <StackPanel Orientation="Horizontal">
                                <ComboBox Grid.Column="0" Width="150" ItemsSource="{Binding SortItems}" DisplayMemberPath="DisplayName" SelectedItem="{Binding SecondSortKey, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" IsSynchronizedWithCurrentItem="True" Style="{StaticResource fiterCombobox}" />
                                <CheckBox Grid.Column="1" Content="Descending" IsChecked="{Binding IsSecondSortOrderDesc, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Command="{Binding CmdChangedSort}" Style="{StaticResource fiterCheckbox}" />
                            </StackPanel>
                        </GroupBox>
                    </StackPanel>
                </GroupBox>
                <GroupBox Header="Filtering" IsEnabled="{Binding IsNotLoading, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" Visibility="{Binding ShowFilter, UpdateSourceTrigger=PropertyChanged, Converter={dxmvvm:BooleanToVisibilityConverter}}">
                    <StackPanel Orientation="Horizontal">
                        <GroupBox Header="By Type">
                            <ComboBox Width="150" ItemsSource="{Binding AnimeTypes}" DisplayMemberPath="Name" IsSynchronizedWithCurrentItem="True" SelectedItem="{Binding FilterType, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource fiterCombobox}" />
                        </GroupBox>
                        <GroupBox Header="By Title">
                            <Grid>
                                <Grid.Resources>
                                    <dxmvvm:StringToVisibilityConverter x:Key="stringVisConv" Inverse="True" HiddenInsteadOfCollapsed="True" />
                                </Grid.Resources>
                                <TextBox Text="{Binding FilterTitle, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource fiterTitleTextbox}" />
                                <Label Content="No title" Visibility="{Binding FilterTitle, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource stringVisConv}}" Style="{StaticResource fiterTitleLabelEmptyHint}" />
                            </Grid>
                        </GroupBox>
                        <GroupBox Header="By States">
                            <StackPanel Orientation="Horizontal">
                                <ComboBox Width="150" ItemsSource="{Binding WatchStates}" DisplayMemberPath="Name" IsSynchronizedWithCurrentItem="True" SelectedItem="{Binding FilterWatchState, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource fiterCombobox}" />
                                <CheckBox Content="Marked" IsChecked="{Binding FilterMarked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource fiterCheckbox}" />
                            </StackPanel>
                        </GroupBox>
                        <GroupBox Header="By Category">
                            <StackPanel Orientation="Horizontal">
                                <ComboBox Width="150" ItemsSource="{Binding FilterCategories}" DisplayMemberPath="DisplayName" IsSynchronizedWithCurrentItem="True" SelectedItem="{Binding FilterCategory, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource fiterCombobox}" />
                                <ComboBox Width="150" ItemsSource="{Binding FilterCategoryWeights}" DisplayMemberPath="DisplayName" IsSynchronizedWithCurrentItem="True" SelectedItem="{Binding FilterCategoryMinWeight, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource fiterCombobox}" />
                            </StackPanel>
                        </GroupBox>
                    </StackPanel>
                </GroupBox>
            </StackPanel>
        </Grid>

        <StatusBar DockPanel.Dock="Bottom" FontSize="16">
            <StatusBar.ItemsPanel>
                <ItemsPanelTemplate>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <!-- Number of animes -->
                            <ColumnDefinition Width="Auto" />
                            <!-- Separator -->
                            <ColumnDefinition Width="Auto" />
                            <!-- Visible anime count -->
                            <ColumnDefinition Width="Auto" />
                            <!--  of  -->
                            <ColumnDefinition Width="Auto" />
                            <!-- Total anime count -->
                            <ColumnDefinition Width="Auto" />
                            <!-- Separator -->
                            <ColumnDefinition Width="Auto" />
                            <!-- Spacer -->
                            <ColumnDefinition Width="*" />
                            <!-- Loading subject -->
                            <ColumnDefinition Width="Auto" />
                            <!-- Separator -->
                            <ColumnDefinition Width="Auto" />
                            <!-- Loading header -->
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                    </Grid>
                </ItemsPanelTemplate>
            </StatusBar.ItemsPanel>
            <StatusBarItem Grid.Column="0">
                <TextBlock Text="Number of animes" />
            </StatusBarItem>
            <Separator Grid.Column="1" />
            <StatusBarItem Grid.Column="2">
                <TextBlock Text="{Binding VisibleAnimeCount, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" />
            </StatusBarItem>
            <StatusBarItem Grid.Column="3">
                <TextBlock Text="of" />
            </StatusBarItem>
            <StatusBarItem Grid.Column="4">
                <TextBlock Text="{Binding TotalAnimeCount, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" />
            </StatusBarItem>
            <Separator Grid.Column="5" />

            <StatusBarItem Grid.Column="6"/>
            <StatusBarItem Grid.Column="7">
                <TextBlock Text="{Binding LoadingSubject, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" />
            </StatusBarItem>
            <Separator Grid.Column="8" />
            <StatusBarItem Grid.Column="9">
                <TextBlock Text="{Binding LoadingHeader, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" />
            </StatusBarItem>
        </StatusBar>
        <DockPanel x:Name="MainContent">
            <Grid>
                <DockPanel Background="White" Panel.ZIndex="1" VerticalAlignment="Center" HorizontalAlignment="Stretch" Visibility="{Binding LoadingWindowVisibility, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}">
                    <StackPanel Margin="5">
                        <TextBlock Width="300" TextTrimming="CharacterEllipsis" Text="{Binding LoadingHeader, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" FontSize="16"/>
                        <TextBlock Width="300" TextTrimming="CharacterEllipsis" Text="{Binding LoadingSubject, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" FontSize="16"/>
                        <ProgressBar Width="300" Height="20" Value="{Binding LoadingPercentage, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" IsIndeterminate="{Binding IsLoadingMarque, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" FontSize="16"/>
                    </StackPanel>
                </DockPanel>
                <Frame Name="mainFrame" DataContext="{Binding}" LoadCompleted="mainFrame_LoadCompleted" DataContextChanged="mainFrame_DataContextChanged" ContentRendered="mainFrame_ContentRendered" Source="CardListPage.xaml" Background="{StaticResource transparentBrush}" NavigationUIVisibility="Hidden" />
            </Grid>
        </DockPanel>
    </DockPanel>
</Window>