<RibbonWindow x:Class="Finalspace.Onigiri.Views.MainWindow"
              xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
              xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
              xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
              xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
              xmlns:dxmvvm="http://schemas.devexpress.com/winfx/2008/xaml/mvvm"
              xmlns:viewmodels="clr-namespace:Finalspace.Onigiri.ViewModels"
              mc:Ignorable="d"
        Title="Onigiri" Height="600" Width="800" Icon="../Resources/onigiri.ico" Loaded="RibbonWindow_Loaded">
    <dxmvvm:Interaction.Behaviors>
        <dxmvvm:DispatcherService />
    </dxmvvm:Interaction.Behaviors>
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/Styles/AllResources.xaml"/>
                <ResourceDictionary Source="pack://application:,,,/Styles/Controls.xaml"/>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Window.Resources>
    <DockPanel LastChildFill="True">
        <Ribbon DockPanel.Dock="Top">
            <Ribbon.ApplicationMenu>
                <RibbonApplicationMenu>
                    <RibbonApplicationMenuItem Command="{Binding CmdExit}" Header="Exit" ImageSource="/Resources/close_32x32.png"/>
                    <RibbonApplicationMenu.AuxiliaryPaneContent>
                        <RibbonGallery CanUserFilter="False" ScrollViewer.VerticalScrollBarVisibility="Auto">
                            <RibbonGalleryCategory Background="Transparent"  MaxColumnCount="1">
                            </RibbonGalleryCategory>
                        </RibbonGallery>
                    </RibbonApplicationMenu.AuxiliaryPaneContent>
                </RibbonApplicationMenu>
            </Ribbon.ApplicationMenu>
            
            <RibbonTab Header="View" IsEnabled="{Binding IsNotLoading, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" FontSize="14">
                <RibbonGroup Header="Theme">
                    <RibbonRadioButton GroupName="theme" ToolTip="Automatic detection" Command="{Binding CmdChangeTheme}" CommandParameter="{x:Static viewmodels:MainTheme.Automatic}" IsChecked="{Binding Theme, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource themeBoolConv}, ConverterParameter={x:Static viewmodels:MainTheme.Automatic}}" Label="Auto" LargeImageSource="/Resources/darkmode_trigger_32x32.png" />
                    <RibbonRadioButton GroupName="theme" ToolTip="Light" Command="{Binding CmdChangeTheme}" CommandParameter="{x:Static viewmodels:MainTheme.Light}" IsChecked="{Binding Theme, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource themeBoolConv}, ConverterParameter={x:Static viewmodels:MainTheme.Light}}" Label="Light" LargeImageSource="/Resources/sun_32x32.png" />
                    <RibbonRadioButton GroupName="theme" ToolTip="Dark" Command="{Binding CmdChangeTheme}" CommandParameter="{x:Static viewmodels:MainTheme.Dark}" IsChecked="{Binding Theme, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource themeBoolConv}, ConverterParameter={x:Static viewmodels:MainTheme.Dark}}" Label="Dark" LargeImageSource="/Resources/moon_32x32.png" />
                </RibbonGroup>
                <RibbonGroup Header="Sorting">
                    <StackPanel>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <RibbonComboBox Grid.Column="0" IsEditable="True" IsReadOnly="True">
                                <RibbonGallery Command="{Binding CmdChangedSort}" IsSynchronizedWithCurrentItem="True" SelectedItem="{Binding FirstSortKey, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                                    <RibbonGalleryCategory Header="First field" ItemsSource="{Binding SortItems}" DisplayMemberPath="DisplayName" />
                                </RibbonGallery>
                            </RibbonComboBox>
                            <RibbonCheckBox Command="{Binding CmdChangedSort}" Grid.Column="1" IsChecked="{Binding IsFirstSortOrderDesc, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Label="Descending" />
                        </Grid>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <RibbonComboBox Grid.Column="0" IsEditable="True" IsReadOnly="True">
                                <RibbonGallery Command="{Binding CmdChangedSort}" IsSynchronizedWithCurrentItem="True" SelectedItem="{Binding SecondSortKey, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                                    <RibbonGalleryCategory Header="Second field" ItemsSource="{Binding SortItems}" DisplayMemberPath="DisplayName" />
                                </RibbonGallery>
                            </RibbonComboBox>
                            <RibbonCheckBox Command="{Binding CmdChangedSort}" Grid.Column="1" IsChecked="{Binding IsSecondSortOrderDesc, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Label="Descending" />
                        </Grid>
                    </StackPanel>
                </RibbonGroup>
                <RibbonGroup Header="Filter">
                    <RibbonComboBox Label="By Type" IsEditable="True" IsReadOnly="True">
                        <RibbonGallery Command="{Binding CmdChangedFilter}" IsSynchronizedWithCurrentItem="True" SelectedItem="{Binding FilterType, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                            <RibbonGalleryCategory ItemsSource="{Binding AnimeTypes}" DisplayMemberPath="Name" />
                        </RibbonGallery>
                    </RibbonComboBox>
                    <RibbonTextBox Command="{Binding CmdChangedFilter}" Label="By Title" Text="{Binding FilterTitle, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                    <RibbonComboBox Label="By Watch state" IsEditable="True" IsReadOnly="True">
                        <RibbonGallery Command="{Binding CmdChangedFilter}" IsSynchronizedWithCurrentItem="True" SelectedItem="{Binding FilterWatchState, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                            <RibbonGalleryCategory ItemsSource="{Binding WatchStates}" DisplayMemberPath="Name" />
                        </RibbonGallery>
                    </RibbonComboBox>
                    <RibbonComboBox Label="By Category" IsEditable="False" IsReadOnly="False">
                        <RibbonGallery Command="{Binding CmdChangedFilter}" IsSynchronizedWithCurrentItem="True" SelectedItem="{Binding FilterCategory, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                            <RibbonGalleryCategory ItemsSource="{Binding FilterCategories, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" DisplayMemberPath="DisplayName" />
                        </RibbonGallery>
                    </RibbonComboBox>
                    <RibbonComboBox Label="Min Category Weight" IsEditable="False" IsReadOnly="False">
                        <RibbonGallery Command="{Binding CmdChangedFilter}" IsSynchronizedWithCurrentItem="True" SelectedItem="{Binding FilterCategoryMinWeight, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                            <RibbonGalleryCategory ItemsSource="{Binding FilterCategoryWeights, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" DisplayMemberPath="DisplayName" />
                        </RibbonGallery>
                    </RibbonComboBox>
                    <RibbonCheckBox Label="Marked" Command="{Binding CmdChangedFilter}" IsChecked="{Binding FilterMarked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    <RibbonCheckBox Label="To remove" Command="{Binding CmdChangedFilter}" IsChecked="{Binding FilterRemove, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                </RibbonGroup>
            </RibbonTab>

            <RibbonTab Header="Home" IsEnabled="{Binding IsNotLoading, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" FontSize="14">
                <RibbonGroup Header="Actions">
                    <RibbonButton ToolTip="Reload Database" Command="{Binding CmdRefresh}" Label="Refresh" LargeImageSource="/Resources/refresh_32x32.png" />
                    <RibbonButton ToolTip="Rebuild Database" Command="{Binding CmdUpdate}" CommandParameter="Database" Label="Rebuild Database" LargeImageSource="/Resources/rebuild_database_32x32.png" />
                    <RibbonButton ToolTip="Update folders from local storage" Command="{Binding CmdUpdate}" CommandParameter="Store" Label="Update Folders" LargeImageSource="/Resources/download_to_local_store_32x32.png" />
                    <RibbonButton ToolTip="Update titles from the internet" Command="{Binding CmdUpdate}" CommandParameter="Titles" Label="Update Titles" LargeImageSource="/Resources/download_32x32.png" />
                    <RibbonButton ToolTip="Show titles" Command="{Binding CmdTitles}" Label="Titles" LargeImageSource="/Resources/titles_32x32.png" />
                    <RibbonButton ToolTip="Show issues" Command="{Binding CmdIssues}" Label="Issues" LargeImageSource="/Resources/suggestion_32x32.png" />
                </RibbonGroup>
            </RibbonTab>

        </Ribbon>
        <StatusBar DockPanel.Dock="Bottom" FontSize="16">
            <StatusBar.ItemsPanel>
                <ItemsPanelTemplate>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <!-- Number of animes -->
                            <ColumnDefinition Width="Auto" />
                            <!-- Separator -->
                            <ColumnDefinition Width="Auto" />
                            <!-- Visible anime count -->
                            <ColumnDefinition Width="Auto" />
                            <!--  of  -->
                            <ColumnDefinition Width="Auto" />
                            <!-- Total anime count -->
                            <ColumnDefinition Width="Auto" />
                            <!-- Separator -->
                            <ColumnDefinition Width="Auto" />
                            <!-- Spacer -->
                            <ColumnDefinition Width="*" />
                            <!-- Loading subject -->
                            <ColumnDefinition Width="Auto" />
                            <!-- Separator -->
                            <ColumnDefinition Width="Auto" />
                            <!-- Loading header -->
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                    </Grid>
                </ItemsPanelTemplate>
            </StatusBar.ItemsPanel>
            <StatusBarItem Grid.Column="0">
                <TextBlock Text="Number of animes" />
            </StatusBarItem>
            <Separator Grid.Column="1" />
            <StatusBarItem Grid.Column="2">
                <TextBlock Text="{Binding VisibleAnimeCount, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" />
            </StatusBarItem>
            <StatusBarItem Grid.Column="3">
                <TextBlock Text="of" />
            </StatusBarItem>
            <StatusBarItem Grid.Column="4">
                <TextBlock Text="{Binding TotalAnimeCount, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" />
            </StatusBarItem>
            <Separator Grid.Column="5" />

            <StatusBarItem Grid.Column="6"/>
            <StatusBarItem Grid.Column="7">
                <TextBlock Text="{Binding LoadingSubject, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" />
            </StatusBarItem>
            <Separator Grid.Column="8" />
            <StatusBarItem Grid.Column="9">
                <TextBlock Text="{Binding LoadingHeader, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" />
            </StatusBarItem>
        </StatusBar>
        <DockPanel x:Name="MainContent">
            <Grid>
                <DockPanel Background="White" Panel.ZIndex="1" VerticalAlignment="Center" HorizontalAlignment="Stretch" Visibility="{Binding LoadingWindowVisibility, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}">
                    <StackPanel Margin="5">
                        <TextBlock Width="300" TextTrimming="CharacterEllipsis" Text="{Binding LoadingHeader, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" FontSize="16"/>
                        <TextBlock Width="300" TextTrimming="CharacterEllipsis" Text="{Binding LoadingSubject, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" FontSize="16"/>
                        <ProgressBar Width="300" Height="20" Value="{Binding LoadingPercentage, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" IsIndeterminate="{Binding IsLoadingMarque, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" FontSize="16"/>
                    </StackPanel>
                </DockPanel>
                <Frame Name="mainFrame" DataContext="{Binding}" LoadCompleted="mainFrame_LoadCompleted" DataContextChanged="mainFrame_DataContextChanged" Source="CardListPage.xaml" />
            </Grid>
        </DockPanel>
    </DockPanel>
</RibbonWindow>