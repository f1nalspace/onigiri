<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:models="clr-namespace:Finalspace.Onigiri.Models;assembly=OnigiriCore"
                    xmlns:converters="clr-namespace:Finalspace.Onigiri.Converters">
    <converters:NullImageConverter x:Key="nullImageConverter"/>
    <converters:AnimeImageConverter x:Key="animeImageConverter"/>
    <converters:IsGreaterThanConverter x:Key="isGreaterThanConverter"/>
    <converters:AnimeDescriptionConverter x:Key="animeDescConv" />
    <converters:ThemeToBoolConverter x:Key="themeBoolConv" />
    <converters:UserImageResourceConverter x:Key="userImgConv" />
    <converters:AnimeUserMultiConverter x:Key="animeUserMultiConv" />

    <converters:IntGreaterThanConverter x:Key="int576pGTConv" Cutoff="576" />
    <converters:IntGreaterThanConverter x:Key="int720pGTConv" Cutoff="720" />
    <converters:IntGreaterThanConverter x:Key="int1080pGTConv" Cutoff="1080" />
    <converters:IntGreaterThanConverter x:Key="int1440pGTConv" Cutoff="1440" />
    <converters:IntGreaterThanConverter x:Key="int2160pGTConv" Cutoff="2160" />

    <BitmapImage x:Key="noPictureImage" UriSource="/Resources/nopicture.png" />

    <BitmapImage x:Key="starNoImage" UriSource="/Resources/star0.png" />
    <BitmapImage x:Key="starHalfImage" UriSource="/Resources/star1.png" />
    <BitmapImage x:Key="starFullImage" UriSource="/Resources/star2.png" />

    <BitmapImage x:Key="markedTrueImage" UriSource="/Resources/mark.png" />
    <BitmapImage x:Key="markedFalseImage" UriSource="/Resources/mark_false.png" />

    <BitmapImage x:Key="anniWatchedTrueImage" UriSource="/Resources/anni.png" />
    <BitmapImage x:Key="anniWatchedFalseImage" UriSource="/Resources/anni_false.png" />
    <BitmapImage x:Key="anniDeleteTrueImage" UriSource="/Resources/anni_delete.png" />
    <BitmapImage x:Key="anniDeleteFalseImage" UriSource="/Resources/anni_delete_false.png" />

    <BitmapImage x:Key="finalWatchedTrueImage" UriSource="/Resources/final.png" />
    <BitmapImage x:Key="finalWatchedFalseImage" UriSource="/Resources/final_false.png" />
    <BitmapImage x:Key="finalDeleteTrueImage" UriSource="/Resources/final_delete.png" />
    <BitmapImage x:Key="finalDeleteFalseImage" UriSource="/Resources/final_delete_false.png" />

    <BitmapImage x:Key="videoQuality576pImage" UriSource="/Resources/v_576p.png" />
    <BitmapImage x:Key="videoQuality720pImage" UriSource="/Resources/v_720p.png" />
    <BitmapImage x:Key="videoQuality1080pImage" UriSource="/Resources/v_1080p.png" />
    <BitmapImage x:Key="videoQuality1440pImage" UriSource="/Resources/v_1440p.png" />
    <BitmapImage x:Key="videoQuality2160pImage" UriSource="/Resources/v_2160p.png" />

    <SolidColorBrush x:Key="animeTitleBackground" Color="Black" Opacity="0.75" />

    <SolidColorBrush x:Key="transparentBrush" Color="Black" Opacity="0" />

    <!-- Cards-Layout (800x400 + 20x20 total margin) -->
    <Thickness x:Key="cardMargin" Left="10" Right="10" Top="10" Bottom="10" />
    <Size x:Key="cardSize" Width="800" Height="400" />
    <Size x:Key="cardSizeWithMargin" Width="820" Height="420" />

    <Style x:Key="mainImageColumn" TargetType="ColumnDefinition">
        <Setter Property="Width" Value="260" />
    </Style>
    <Style x:Key="mainBlockColumn" TargetType="ColumnDefinition">
        <Setter Property="Width" Value="540" />
    </Style>

    <Style x:Key="pictureImage" TargetType="Image">
        <Setter Property="Width" Value="260" />
        <Setter Property="Height" Value="400" />
        <Setter Property="Stretch" Value="UniformToFill" />
    </Style>

    <Style x:Key="animeLabel" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="Verdana" />
    </Style>

    <Style x:Key="animeTitleText" TargetType="TextBlock" BasedOn="{StaticResource animeLabel}">
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Padding" Value="6" />
        <Setter Property="TextWrapping" Value="Wrap" />
        <Setter Property="FontSize" Value="20" />
    </Style>

    <Style x:Key="video_quality_icon" TargetType="Image">
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="Width" Value="64" />
        <Setter Property="Height" Value="50" />
        <Setter Property="Stretch" Value="Fill" />
        <Setter Property="Opacity" Value="0.65" />
    </Style>

    <ControlTemplate x:Key="videoQualityPanelTemplate">
        <Grid>
            <ItemsControl ItemsSource="{Binding VideoHeights, UpdateSourceTrigger=PropertyChanged}">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <StackPanel Orientation="Horizontal" />
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <Image>
                            <Image.Style>
                                <Style TargetType="Image" BasedOn="{StaticResource video_quality_icon}">
                                    <Setter Property="Source" Value="{StaticResource videoQuality576pImage}" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Converter={StaticResource int576pGTConv}}" Value="true">
                                            <Setter Property="Source" Value="{StaticResource videoQuality576pImage}" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Converter={StaticResource int720pGTConv}}" Value="true">
                                            <Setter Property="Source" Value="{StaticResource videoQuality720pImage}" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Converter={StaticResource int1080pGTConv}}" Value="true">
                                            <Setter Property="Source" Value="{StaticResource videoQuality1080pImage}" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Converter={StaticResource int1440pGTConv}}" Value="true">
                                            <Setter Property="Source" Value="{StaticResource videoQuality1440pImage}" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Converter={StaticResource int2160pGTConv}}" Value="true">
                                            <Setter Property="Source" Value="{StaticResource videoQuality2160pImage}" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Image.Style>
                        </Image>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
        </Grid>
    </ControlTemplate>

    <Style x:Key="contentTitleRow" TargetType="RowDefinition">
        <Setter Property="Height" Value="60" />
    </Style>
    <Style x:Key="contentDescriptionRow" TargetType="RowDefinition">
        <Setter Property="Height" Value="*" />
    </Style>
    <Style x:Key="contentCategoriesRow" TargetType="RowDefinition">
        <Setter Property="Height" Value="60" />
    </Style>

    <Style x:Key="headerPanel" TargetType="DockPanel">
        <Setter Property="Background" Value="{StaticResource headerBackground}" />
    </Style>

    <Style x:Key="ratingPanel" TargetType="StackPanel">
        <Setter Property="Margin" Value="0 0 8 0" />
    </Style>

    <!-- User State Panel -->
    
    <Style x:Key="userStatePanel" TargetType="StackPanel">
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Bottom" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Orientation" Value="Horizontal" />
    </Style>

    <Style x:Key="userIconImage" TargetType="Image">
        <Setter Property="Width" Value="48" />
        <Setter Property="Height" Value="48" />
    </Style>

    <Style x:Key="userIconStateImage" TargetType="Image">
        <Setter Property="Width" Value="32" />
        <Setter Property="Height" Value="32" />
    </Style>

    <ControlTemplate x:Key="userStatePanelTemplate">
        <StackPanel Style="{StaticResource userStatePanel}">

            <Image>
                <Image.Style>
                    <Style TargetType="Image" BasedOn="{StaticResource userIconImage}">
                        <Setter Property="Source" Value="/Resources/mark_false.png" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding AddonData.Marked, UpdateSourceTrigger=PropertyChanged}" Value="True">
                                <Setter Property="Source" Value="/Resources/mark.png" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Image.Style>
            </Image>
            
            <!-- Watchlist Start -->
            <ItemsControl ScrollViewer.CanContentScroll="True" ScrollViewer.HorizontalScrollBarVisibility="Disabled" ScrollViewer.VerticalScrollBarVisibility="Disabled" ItemsSource="{Binding AddonData.Watchstates}">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <StackPanel Orientation="Horizontal" />
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <Grid>
                            <Grid.Style>
                                <Style TargetType="Grid">
                                    <Setter Property="Visibility" Value="Collapsed" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Value}" Value="True">
                                            <Setter Property="Visibility" Value="Visible" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Grid.Style>
                            <Image Style="{StaticResource userIconImage}">
                                <Image.Source>
                                    <MultiBinding Converter="{converters:AddonStateImageSourceMultiConverter}">
                                        <Binding Source="/Resources/" />
                                        <Binding Path="UserName" UpdateSourceTrigger="PropertyChanged" />
                                    </MultiBinding>
                                </Image.Source>
                            </Image>
                            <Image Source="/Resources/watch.png" Style="{StaticResource userIconStateImage}" />
                        </Grid>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
            <!-- Watchlist End -->

            <!-- Deletelist Start -->
            <ItemsControl ScrollViewer.CanContentScroll="True" ScrollViewer.HorizontalScrollBarVisibility="Disabled" ScrollViewer.VerticalScrollBarVisibility="Disabled" ItemsSource="{Binding AddonData.Deleteits}">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <StackPanel Orientation="Horizontal" />
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <Grid>
                            <Grid.Style>
                                <Style TargetType="Grid">
                                    <Setter Property="Visibility" Value="Collapsed" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Value}" Value="True">
                                            <Setter Property="Visibility" Value="Visible" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Grid.Style>
                            <Image Style="{StaticResource userIconImage}">
                                <Image.Source>
                                    <MultiBinding Converter="{converters:AddonStateImageSourceMultiConverter}">
                                        <Binding Source="/Resources/" />
                                        <Binding Path="UserName" UpdateSourceTrigger="PropertyChanged" />
                                    </MultiBinding>
                                </Image.Source>
                            </Image>
                            <Image Source="/Resources/delete.png" Style="{StaticResource userIconStateImage}" />
                        </Grid>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
            <!-- Deletelist End -->

        </StackPanel>
    </ControlTemplate>
    
    <!-- Actions Panel -->

    <Style x:Key="actionPanelButton" TargetType="Button">
        <Setter Property="Width" Value="38" />
        <Setter Property="Height" Value="38" />
        <Setter Property="Margin" Value="2 1" />
    </Style>

    <Style x:Key="actionsPanelBack" TargetType="Grid">
        <Setter Property="Margin" Value="2" />
        <Setter Property="HorizontalAlignment" Value="Right" />
        <Setter Property="VerticalAlignment" Value="Bottom" />
        <Setter Property="Background" Value="Transparent" />
    </Style>

    <ControlTemplate x:Key="actionsPanelTemplate">
        <Grid Style="{StaticResource actionsPanelBack}" x:Name="outerActionPanel">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <StackPanel x:Name="innerActionPanel" Grid.Column="0" Orientation="Horizontal" Visibility="Collapsed">
                <Button Style="{StaticResource actionPanelButton}">
                    <Button.Template>
                        <ControlTemplate>
                            <Image Source="/Resources/mark.png" />
                        </ControlTemplate>
                    </Button.Template>
                </Button>

                <ItemsControl ItemsSource="{Binding DataContext.CoreService.Config.Users, RelativeSource={RelativeSource AncestorType=Page, Mode=FindAncestor}}">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <StackPanel Orientation="Horizontal" />
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <Button VerticalAlignment="Bottom">
                                <Button.Template>

                                    <ControlTemplate TargetType="Button">
                                        <Grid x:Name="usersActionsPanelGrid" Background="Transparent">
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto" />
                                                <RowDefinition Height="Auto" />
                                            </Grid.RowDefinitions>
                                            <StackPanel Grid.Row="0" Orientation="Vertical" Visibility="Collapsed" x:Name="userActionsPanel">
                                                <Button Style="{StaticResource actionPanelButton}" Command="{Binding DataContext.CmdUserActionToggleDelete, RelativeSource={RelativeSource AncestorType=Page, Mode=FindAncestor}}">
                                                    <Button.CommandParameter>
                                                        <MultiBinding Converter="{StaticResource animeUserMultiConv}">
                                                            <Binding Path="DataContext" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type ListBoxItem}}" />
                                                            <Binding Path="UserName" />
                                                        </MultiBinding>
                                                    </Button.CommandParameter>
                                                    <Button.Template>
                                                        <ControlTemplate>
                                                            <Image x:Name="deleteIcon" Source="/Resources/delete_false.png" />
                                                            <ControlTemplate.Triggers>
                                                                <Trigger Property="IsMouseOver" Value="True">
                                                                    <Setter TargetName="deleteIcon" Property="Source" Value="/Resources/delete.png" />
                                                                </Trigger>
                                                            </ControlTemplate.Triggers>
                                                        </ControlTemplate>
                                                    </Button.Template>
                                                </Button>
                                                <Button Style="{StaticResource actionPanelButton}" Command="{Binding DataContext.CmdUserActionToggleWatched, RelativeSource={RelativeSource AncestorType=Page, Mode=FindAncestor}}">
                                                    <Button.CommandParameter>
                                                        <MultiBinding Converter="{StaticResource animeUserMultiConv}">
                                                            <Binding Path="DataContext" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type ListBoxItem}}" />
                                                            <Binding Path="UserName" />
                                                        </MultiBinding>
                                                    </Button.CommandParameter>
                                                    <Button.Template>
                                                        <ControlTemplate>
                                                            <Image x:Name="markIcon" Source="/Resources/watch_false.png" />
                                                            <ControlTemplate.Triggers>
                                                                <Trigger Property="IsMouseOver" Value="True">
                                                                    <Setter TargetName="markIcon" Property="Source" Value="/Resources/watch.png" />
                                                                </Trigger>
                                                            </ControlTemplate.Triggers>
                                                        </ControlTemplate>
                                                    </Button.Template>
                                                </Button>
                                            </StackPanel>
                                            <Button Grid.Row="1" Style="{StaticResource actionPanelButton}" x:Name="userActionButton">
                                                <Button.Template>
                                                    <ControlTemplate TargetType="Button">
                                                        <Grid>
                                                            <Image>
                                                                <Image.Style>
                                                                    <Style TargetType="Image">
                                                                        <Setter Property="Source">
                                                                            <Setter.Value>
                                                                                <MultiBinding Converter="{StaticResource userImgConv}">
                                                                                    <Binding Path="UserName" UpdateSourceTrigger="PropertyChanged" />
                                                                                    <Binding Path="DisabledImage" UpdateSourceTrigger="PropertyChanged" />
                                                                                </MultiBinding>
                                                                            </Setter.Value>
                                                                        </Setter>
                                                                        <Style.Triggers>
                                                                            <DataTrigger Binding="{Binding Path=Tag, RelativeSource={RelativeSource AncestorType=Button, Mode=FindAncestor}}" Value="X">
                                                                                <Setter Property="Source">
                                                                                    <Setter.Value>
                                                                                        <MultiBinding Converter="{StaticResource userImgConv}">
                                                                                            <Binding Path="UserName" UpdateSourceTrigger="PropertyChanged" />
                                                                                            <Binding Path="ActiveImage" UpdateSourceTrigger="PropertyChanged" />
                                                                                        </MultiBinding>
                                                                                    </Setter.Value>
                                                                                </Setter>
                                                                            </DataTrigger>
                                                                        </Style.Triggers>
                                                                    </Style>
                                                                </Image.Style>
                                                            </Image>
                                                        </Grid>
                                                    </ControlTemplate>
                                                </Button.Template>
                                            </Button>
                                        </Grid>
                                        <ControlTemplate.Triggers>
                                            <Trigger SourceName="usersActionsPanelGrid" Property="IsMouseOver" Value="True">
                                                <Setter TargetName="userActionsPanel" Property="Visibility" Value="Visible" />
                                                <Setter TargetName="userActionButton" Property="Tag" Value="X" />
                                            </Trigger>
                                            <Trigger SourceName="usersActionsPanelGrid" Property="IsMouseOver" Value="False">
                                                <Setter TargetName="userActionButton" Property="Tag" Value="{x:Null}" />
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>

                                </Button.Template>
                            </Button>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>

                <!--
                <Button Style="{StaticResource actionButton}" VerticalAlignment="Bottom">
                    <Button.Template>
                        <ControlTemplate TargetType="Button">
                            <Grid>
                                <Image Source="/Resources/mark_false.png" />
                            </Grid>
                        </ControlTemplate>
                    </Button.Template>
                </Button>
                -->
            </StackPanel>
            <Button Grid.Column="1" Style="{StaticResource actionPanelButton}" VerticalAlignment="Bottom">
                <Button.Template>
                    <ControlTemplate TargetType="Button">
                        <Grid>
                            <Image Source="/Resources/add_32x32.png" />
                        </Grid>
                    </ControlTemplate>
                </Button.Template>
            </Button>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger SourceName="outerActionPanel" Property="IsMouseOver" Value="True">
                <Setter TargetName="innerActionPanel" Property="Visibility" Value="Visible" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- Action buttons &amp; icons -->

    <Style x:Key="actionIcon" TargetType="Image">
        <Setter Property="Width" Value="48" />
        <Setter Property="Height" Value="48" />
        <Setter Property="Stretch" Value="UniformToFill" />
    </Style>
        
    <Style x:Key="actionIconWatchedAnni" TargetType="Image" BasedOn="{StaticResource actionIcon}">
        <Setter Property="Source" Value="{StaticResource anniWatchedFalseImage}" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding AddonData.HasAnniWatched, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" Value="true">
                <Setter Property="Source" Value="{StaticResource anniWatchedTrueImage}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="actionIconWatchedFinal" TargetType="Image" BasedOn="{StaticResource actionIcon}">
        <Setter Property="Source" Value="{StaticResource finalWatchedFalseImage}" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding AddonData.HasFinalWatched, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" Value="true">
                <Setter Property="Source" Value="{StaticResource finalWatchedTrueImage}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="actionIconDeleteitAnni" TargetType="Image" BasedOn="{StaticResource actionIcon}">
        <Setter Property="Source" Value="{StaticResource anniDeleteFalseImage}" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding AddonData.HasAnniDeleteit, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" Value="true">
                <Setter Property="Source" Value="{StaticResource anniDeleteTrueImage}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="actionIconDeleteitFinal" TargetType="Image" BasedOn="{StaticResource actionIcon}">
        <Setter Property="Source" Value="{StaticResource finalDeleteFalseImage}" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding AddonData.HasFinalDeleteit, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" Value="true">
                <Setter Property="Source" Value="{StaticResource finalDeleteTrueImage}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="actionIconMarked" TargetType="Image" BasedOn="{StaticResource actionIcon}">
        <Setter Property="Source" Value="{StaticResource markedFalseImage}" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding AddonData.Marked, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" Value="true">
                <Setter Property="Source" Value="{StaticResource markedTrueImage}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ratingIcon" TargetType="Image">
        <Setter Property="Height" Value="26" />
        <Setter Property="Stretch" Value="UniformToFill" />
    </Style>

    <Style x:Key="ratingIcon0" TargetType="Image" BasedOn="{StaticResource ratingIcon}">
        <Setter Property="Source" Value="{StaticResource starNoImage}" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=PermanentRating, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource isGreaterThanConverter}, ConverterParameter=0.0}" Value="True">
                <Setter Property="Source" Value="{StaticResource starHalfImage}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=PermanentRating, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource isGreaterThanConverter}, ConverterParameter=1.0}" Value="True">
                <Setter Property="Source" Value="{StaticResource starFullImage}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="ratingIcon1" TargetType="Image" BasedOn="{StaticResource ratingIcon}">
        <Setter Property="Source" Value="{StaticResource starNoImage}" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=PermanentRating, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource isGreaterThanConverter}, ConverterParameter=2.0}" Value="True">
                <Setter Property="Source" Value="{StaticResource starHalfImage}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=PermanentRating, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource isGreaterThanConverter}, ConverterParameter=3.0}" Value="True">
                <Setter Property="Source" Value="{StaticResource starFullImage}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="ratingIcon2" TargetType="Image" BasedOn="{StaticResource ratingIcon}">
        <Setter Property="Source" Value="{StaticResource starNoImage}" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=PermanentRating, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource isGreaterThanConverter}, ConverterParameter=4.0}" Value="True">
                <Setter Property="Source" Value="{StaticResource starHalfImage}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=PermanentRating, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource isGreaterThanConverter}, ConverterParameter=5.0}" Value="True">
                <Setter Property="Source" Value="{StaticResource starFullImage}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="ratingIcon3" TargetType="Image" BasedOn="{StaticResource ratingIcon}">
        <Setter Property="Source" Value="{StaticResource starNoImage}" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=PermanentRating, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource isGreaterThanConverter}, ConverterParameter=6.0}" Value="True">
                <Setter Property="Source" Value="{StaticResource starHalfImage}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=PermanentRating, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource isGreaterThanConverter}, ConverterParameter=7.0}" Value="True">
                <Setter Property="Source" Value="{StaticResource starFullImage}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="ratingIcon4" TargetType="Image" BasedOn="{StaticResource ratingIcon}">
        <Setter Property="Source" Value="{StaticResource starNoImage}" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=PermanentRating, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource isGreaterThanConverter}, ConverterParameter=8.0}" Value="True">
                <Setter Property="Source" Value="{StaticResource starHalfImage}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=PermanentRating, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource isGreaterThanConverter}, ConverterParameter=9.0}" Value="True">
                <Setter Property="Source" Value="{StaticResource starFullImage}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="detailsTitleText" TargetType="TextBlock" BasedOn="{StaticResource animeLabel}">
        <Setter Property="FontSize" Value="16" />
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="Padding" Value="10" />
        <Setter Property="TextWrapping" Value="Wrap" />
        <Setter Property="FontSize" Value="20" />
    </Style>

    <Style x:Key="animeMainlineText" TargetType="TextBlock" BasedOn="{StaticResource animeLabel}">
        <Setter Property="FontSize" Value="16" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Foreground" Value="{StaticResource mainlineForeground}" />
    </Style>

    <Style x:Key="animeSublineText" TargetType="TextBlock" BasedOn="{StaticResource animeLabel}">
        <Setter Property="FontSize" Value="18" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Foreground" Value="{StaticResource sublineForeground}" />
    </Style>

    <Style x:Key="descriptionText" TargetType="TextBlock" BasedOn="{StaticResource animeLabel}">
        <Setter Property="Foreground" Value="{StaticResource descriptionForeground}" />
        <Setter Property="FontSize" Value="16" />
        <Setter Property="Padding" Value="8" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="TextWrapping" Value="Wrap" />
    </Style>

    <Style x:Key="noAnimesText" TargetType="TextBlock" BasedOn="{StaticResource animeLabel}">
        <Setter Property="Foreground" Value="{StaticResource noAnimesForeground}" />
    </Style>

    <Style x:Key="tagItemText" TargetType="TextBlock" BasedOn="{StaticResource animeLabel}">
        <Setter Property="Foreground" Value="White" />
        <Setter Property="FontSize" Value="16" />
        <Setter Property="TextTrimming" Value="None" />
        <Setter Property="TextWrapping" Value="NoWrap" />
        <Setter Property="TextAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Center" />
    </Style>

    <!-- Lists -->
    <Style x:Key="animeList" TargetType="ListBox">
        <Setter Property="FontSize" Value="20" />

        <Setter Property="Background" Value="{StaticResource animeListBackground}" />

        <Style.Triggers>
            <Trigger Property="HasItems" Value="False">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ListBox}">
                            <Grid>
                                <Grid.Style>
                                    <Style TargetType="Grid">
                                        <Setter Property="Background" Value="{StaticResource animeListBackground}" />
                                    </Style>
                                </Grid.Style>
                                <TextBlock Text="No Animes found." HorizontalAlignment="Center" VerticalAlignment="Center">
                                    <TextBlock.Style>
                                        <Style TargetType="TextBlock">
                                            <Setter Property="FontSize" Value="24" />
                                            <Setter Property="Foreground" Value="{StaticResource noAnimesForeground}" />
                                        </Style>
                                    </TextBlock.Style>
                                </TextBlock>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="animeItem" TargetType="ListBoxItem">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Focusable" Value="False" />

        <Setter Property="Padding" Value="0" />
        <Setter Property="Margin" Value="10" />

        <Setter Property="Background" Value="{StaticResource animeItemBackground}" />
    </Style>

    <Style x:Key="bottomPanel" TargetType="Grid">
        <Setter Property="Background" Value="{StaticResource tagsBackground}" />
    </Style>

    <Style x:Key="tagsItemsControl" TargetType="ItemsControl">
        <Setter Property="Background" Value="{StaticResource tagsBackground}" />
        <Setter Property="FontSize" Value="12" />
    </Style>

    <Style x:Key="tagItem" TargetType="Border">
        <Setter Property="Background" Value="BlueViolet" />
        <Setter Property="Padding" Value="3" />
        <Setter Property="Margin" Value="2" />
        <Setter Property="CornerRadius" Value="2" />
        <Setter Property="BorderBrush" Value="{StaticResource tagItemBorderBrush}" />
        <Setter Property="BorderThickness" Value="0.25" />
    </Style>

    <Style x:Key="fiterTitleTextbox" TargetType="TextBox">
        <Setter Property="FontSize" Value="20" />
        <Setter Property="Width" Value="300" />
    </Style>

    <Style x:Key="fiterTitleLabelEmptyHint" TargetType="Label">
        <Setter Property="FontSize" Value="20" />
        <Setter Property="Foreground" Value="DarkGray" />
        <Setter Property="IsHitTestVisible" Value="False" />
    </Style>

    <Style x:Key="fiterCombobox" TargetType="ComboBox">
        <Setter Property="FontSize" Value="16" />
        <Setter Property="IsEditable" Value="True" />
        <Setter Property="IsReadOnly" Value="True" />
    </Style>

    <Style x:Key="fiterCheckbox" TargetType="CheckBox">
        <Setter Property="FontSize" Value="20" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
    </Style>
</ResourceDictionary>