<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:converters="clr-namespace:Finalspace.Onigiri.Converters">
    <converters:NullImageConverter x:Key="nullImageConverter"/>
    <converters:AnimeImageConverter x:Key="animeImageConverter"/>
    <converters:IsGreaterThanConverter x:Key="isGreaterThanConverter"/>
    <converters:AnimeDescriptionConverter x:Key="animeDescConv" />
    <converters:ThemeToBoolConverter x:Key="themeBoolConv" />

    <BitmapImage x:Key="noPictureImage" UriSource="/Resources/nopicture.png" />

    <BitmapImage x:Key="starNoImage" UriSource="/Resources/star0.png" />
    <BitmapImage x:Key="starHalfImage" UriSource="/Resources/star1.png" />
    <BitmapImage x:Key="starFullImage" UriSource="/Resources/star2.png" />

    <BitmapImage x:Key="markedTrueImage" UriSource="/Resources/mark.png" />
    <BitmapImage x:Key="markedFalseImage" UriSource="/Resources/mark_false.png" />

    <BitmapImage x:Key="anniWatchedTrueImage" UriSource="/Resources/anni.png" />
    <BitmapImage x:Key="anniWatchedFalseImage" UriSource="/Resources/anni_false.png" />
    <BitmapImage x:Key="anniDeleteTrueImage" UriSource="/Resources/anni_delete.png" />
    <BitmapImage x:Key="anniDeleteFalseImage" UriSource="/Resources/anni_delete_false.png" />

    <BitmapImage x:Key="finalWatchedTrueImage" UriSource="/Resources/final.png" />
    <BitmapImage x:Key="finalWatchedFalseImage" UriSource="/Resources/final_false.png" />
    <BitmapImage x:Key="finalDeleteTrueImage" UriSource="/Resources/final_delete.png" />
    <BitmapImage x:Key="finalDeleteFalseImage" UriSource="/Resources/final_delete_false.png" />

    <SolidColorBrush x:Key="animeListBackground_light">
        <SolidColorBrush.Color>
            <Color R="214" G="224" B="239" A="255" />
        </SolidColorBrush.Color>
    </SolidColorBrush>
    <SolidColorBrush x:Key="animeListBackground_dark">
        <SolidColorBrush.Color>
            <Color R="19" G="23" B="29" A="255" />
        </SolidColorBrush.Color>
    </SolidColorBrush>

    <SolidColorBrush x:Key="animeItemBackground_light" >
        <SolidColorBrush.Color>
            <Color R="250" G="252" B="252" A="255" />
        </SolidColorBrush.Color>
    </SolidColorBrush>
    <SolidColorBrush x:Key="animeItemBackground_dark" >
        <SolidColorBrush.Color>
            <Color R="31" G="35" B="45" A="255" />
        </SolidColorBrush.Color>
    </SolidColorBrush>

    <SolidColorBrush x:Key="headerBackground_light">
        <SolidColorBrush.Color>
            <Color R="250" G="252" B="252" A="255" />
        </SolidColorBrush.Color>
    </SolidColorBrush>
    <SolidColorBrush x:Key="headerBackground_dark">
        <SolidColorBrush.Color>
            <Color R="31" G="35" B="45" A="255" />
        </SolidColorBrush.Color>
    </SolidColorBrush>

    <SolidColorBrush x:Key="tagsBackground_light">
        <SolidColorBrush.Color>
            <Color R="229" G="233" B="245" A="255" />
        </SolidColorBrush.Color>
    </SolidColorBrush>
    <SolidColorBrush x:Key="tagsBackground_dark">
        <SolidColorBrush.Color>
            <Color R="25" G="29" B="38" A="255" />
        </SolidColorBrush.Color>
    </SolidColorBrush>

    <SolidColorBrush x:Key="descriptionForeground_light">
        <SolidColorBrush.Color>
            <Color R="92" G="114" B="138" A="255" />
        </SolidColorBrush.Color>
    </SolidColorBrush>
    <SolidColorBrush x:Key="descriptionForeground_dark">
        <SolidColorBrush.Color>
            <Color R="129" G="140" B="153" A="255" />
        </SolidColorBrush.Color>
    </SolidColorBrush>

    <SolidColorBrush x:Key="mainlineForeground_light">
        <SolidColorBrush.Color>
            <Color R="92" G="114" B="138" A="255" />
        </SolidColorBrush.Color>
    </SolidColorBrush>
    <SolidColorBrush x:Key="mainlineForeground_dark">
        <SolidColorBrush.Color>
            <Color R="129" G="140" B="153" A="255" />
        </SolidColorBrush.Color>
    </SolidColorBrush>

    <SolidColorBrush x:Key="sublineForeground_light">
        <SolidColorBrush.Color>
            <Color R="92" G="114" B="138" A="255" />
        </SolidColorBrush.Color>
    </SolidColorBrush>
    <SolidColorBrush x:Key="sublineForeground_dark">
        <SolidColorBrush.Color>
            <Color R="129" G="140" B="153" A="255" />
        </SolidColorBrush.Color>
    </SolidColorBrush>

    <SolidColorBrush x:Key="noAnimesForeground_light">
        <SolidColorBrush.Color>
            <Color R="92" G="114" B="138" A="255" />
        </SolidColorBrush.Color>
    </SolidColorBrush>
    <SolidColorBrush x:Key="noAnimesForeground_dark">
        <SolidColorBrush.Color>
            <Color R="129" G="140" B="153" A="255" />
        </SolidColorBrush.Color>
    </SolidColorBrush>

    <Style x:Key="actionButton" TargetType="Button">
        <Setter Property="Width" Value="32" />
        <Setter Property="Height" Value="32" />
        <Setter Property="Margin" Value="2 1" />
    </Style>
    <Style x:Key="actionIcon" TargetType="Image">
        <Setter Property="Width" Value="48" />
        <Setter Property="Height" Value="48" />
        <Setter Property="Stretch" Value="UniformToFill" />
    </Style>
    <Style x:Key="ratingIcon" TargetType="Image">
        <Setter Property="Height" Value="20" />
        <Setter Property="Stretch" Value="UniformToFill" />
    </Style>
    <Style x:Key="actionIconWatchedAnni" TargetType="Image" BasedOn="{StaticResource actionIcon}">
        <Setter Property="Source" Value="{StaticResource anniWatchedFalseImage}" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding AddonData.HasAnniWatched, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" Value="true">
                <Setter Property="Source" Value="{StaticResource anniWatchedTrueImage}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="actionIconWatchedFinal" TargetType="Image" BasedOn="{StaticResource actionIcon}">
        <Setter Property="Source" Value="{StaticResource finalWatchedFalseImage}" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding AddonData.HasFinalWatched, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" Value="true">
                <Setter Property="Source" Value="{StaticResource finalWatchedTrueImage}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="actionIconDeleteitAnni" TargetType="Image" BasedOn="{StaticResource actionIcon}">
        <Setter Property="Source" Value="{StaticResource anniDeleteFalseImage}" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding AddonData.HasAnniDeleteit, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" Value="true">
                <Setter Property="Source" Value="{StaticResource anniDeleteTrueImage}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="actionIconDeleteitFinal" TargetType="Image" BasedOn="{StaticResource actionIcon}">
        <Setter Property="Source" Value="{StaticResource finalDeleteFalseImage}" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding AddonData.HasFinalDeleteit, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" Value="true">
                <Setter Property="Source" Value="{StaticResource finalDeleteTrueImage}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="actionIconMarked" TargetType="Image" BasedOn="{StaticResource actionIcon}">
        <Setter Property="Source" Value="{StaticResource markedFalseImage}" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding AddonData.Marked, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" Value="true">
                <Setter Property="Source" Value="{StaticResource markedTrueImage}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="ratingIcon0" TargetType="Image" BasedOn="{StaticResource ratingIcon}">
        <Setter Property="Source" Value="{StaticResource starNoImage}" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=PermanentRating, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource isGreaterThanConverter}, ConverterParameter=0.0}" Value="True">
                <Setter Property="Source" Value="{StaticResource starHalfImage}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=PermanentRating, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource isGreaterThanConverter}, ConverterParameter=1.0}" Value="True">
                <Setter Property="Source" Value="{StaticResource starFullImage}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="ratingIcon1" TargetType="Image" BasedOn="{StaticResource ratingIcon}">
        <Setter Property="Source" Value="{StaticResource starNoImage}" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=PermanentRating, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource isGreaterThanConverter}, ConverterParameter=2.0}" Value="True">
                <Setter Property="Source" Value="{StaticResource starHalfImage}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=PermanentRating, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource isGreaterThanConverter}, ConverterParameter=3.0}" Value="True">
                <Setter Property="Source" Value="{StaticResource starFullImage}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="ratingIcon2" TargetType="Image" BasedOn="{StaticResource ratingIcon}">
        <Setter Property="Source" Value="{StaticResource starNoImage}" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=PermanentRating, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource isGreaterThanConverter}, ConverterParameter=4.0}" Value="True">
                <Setter Property="Source" Value="{StaticResource starHalfImage}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=PermanentRating, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource isGreaterThanConverter}, ConverterParameter=5.0}" Value="True">
                <Setter Property="Source" Value="{StaticResource starFullImage}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="ratingIcon3" TargetType="Image" BasedOn="{StaticResource ratingIcon}">
        <Setter Property="Source" Value="{StaticResource starNoImage}" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=PermanentRating, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource isGreaterThanConverter}, ConverterParameter=6.0}" Value="True">
                <Setter Property="Source" Value="{StaticResource starHalfImage}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=PermanentRating, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource isGreaterThanConverter}, ConverterParameter=7.0}" Value="True">
                <Setter Property="Source" Value="{StaticResource starFullImage}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="ratingIcon4" TargetType="Image" BasedOn="{StaticResource ratingIcon}">
        <Setter Property="Source" Value="{StaticResource starNoImage}" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=PermanentRating, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource isGreaterThanConverter}, ConverterParameter=8.0}" Value="True">
                <Setter Property="Source" Value="{StaticResource starHalfImage}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=PermanentRating, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource isGreaterThanConverter}, ConverterParameter=9.0}" Value="True">
                <Setter Property="Source" Value="{StaticResource starFullImage}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="animeLabel" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="Verdana" />
    </Style>

    <Style x:Key="animeTitleText" TargetType="TextBlock" BasedOn="{StaticResource animeLabel}">
        <Setter Property="FontSize" Value="16" />
        <Setter Property="Foreground" Value="White" />
    </Style>

    <Style x:Key="animeMainlineText" TargetType="TextBlock" BasedOn="{StaticResource animeLabel}">
        <Setter Property="FontSize" Value="14" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Foreground" Value="{StaticResource mainlineForeground_light}" />

        <Style.Triggers>
            <DataTrigger Binding="{Binding DataContext.IsDarkMode, RelativeSource={RelativeSource AncestorType=Page}, UpdateSourceTrigger=PropertyChanged}" Value="True">
                <DataTrigger.Setters>
                    <Setter Property="Foreground" Value="{StaticResource mainlineForeground_dark}" />
                </DataTrigger.Setters>
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="animeSublineText" TargetType="TextBlock" BasedOn="{StaticResource animeLabel}">
        <Setter Property="FontSize" Value="16" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Foreground" Value="{StaticResource sublineForeground_light}" />

        <Style.Triggers>
            <DataTrigger Binding="{Binding DataContext.IsDarkMode, RelativeSource={RelativeSource AncestorType=Page}, UpdateSourceTrigger=PropertyChanged}" Value="True">
                <DataTrigger.Setters>
                    <Setter Property="Foreground" Value="{StaticResource sublineForeground_dark}" />
                </DataTrigger.Setters>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="animeList" TargetType="ListBox">
        <Setter Property="Background" Value="{StaticResource animeListBackground_light}" />

        <Setter Property="FontSize" Value="16" />

        <Style.Triggers>
            <Trigger Property="HasItems" Value="False">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ListBox}">
                            <TextBlock Text="No Animes found." Foreground="{StaticResource noAnimesForeground_light}">
                            </TextBlock>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <DataTrigger Binding="{Binding DataContext.IsDarkMode, RelativeSource={RelativeSource AncestorType=Page}, UpdateSourceTrigger=PropertyChanged}" Value="True">
                <DataTrigger.Setters>
                    <Setter Property="Background" Value="{StaticResource animeListBackground_dark}" />
                </DataTrigger.Setters>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="animeItem" TargetType="ListBoxItem">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Focusable" Value="False" />

        <Setter Property="Padding" Value="0" />
        <Setter Property="Margin" Value="10" />

        <Setter Property="Background" Value="{StaticResource animeItemBackground_light}" />

        <Style.Triggers>
            <DataTrigger Binding="{Binding DataContext.IsDarkMode, RelativeSource={RelativeSource AncestorType=Page}, UpdateSourceTrigger=PropertyChanged}" Value="True">
                <DataTrigger.Setters>
                    <Setter Property="Background" Value="{StaticResource animeItemBackground_dark}" />
                </DataTrigger.Setters>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="headerPanel" TargetType="DockPanel">
        <Setter Property="Background" Value="{StaticResource headerBackground_light}" />

        <Style.Triggers>
            <DataTrigger Binding="{Binding DataContext.IsDarkMode, RelativeSource={RelativeSource AncestorType=Page}, UpdateSourceTrigger=PropertyChanged}" Value="True">
                <DataTrigger.Setters>
                    <Setter Property="Background" Value="{StaticResource headerBackground_dark}" />
                </DataTrigger.Setters>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="tagsItemsControl" TargetType="ItemsControl">
        <Setter Property="Background" Value="{StaticResource tagsBackground_light}" />

        <Style.Triggers>
            <DataTrigger Binding="{Binding DataContext.IsDarkMode, RelativeSource={RelativeSource AncestorType=Page}, UpdateSourceTrigger=PropertyChanged}" Value="True">
                <DataTrigger.Setters>
                    <Setter Property="Background" Value="{StaticResource tagsBackground_dark}" />
                </DataTrigger.Setters>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="tagItem" TargetType="Border">
        <Setter Property="Background" Value="BlueViolet" />
    </Style>

    <Style x:Key="tagItemText" TargetType="TextBlock" BasedOn="{StaticResource animeLabel}">
        <Setter Property="Foreground" Value="White" />
        <Setter Property="FontSize" Value="12" />
    </Style>

    <Style x:Key="descriptionText" TargetType="TextBlock" BasedOn="{StaticResource animeLabel}">
        <Setter Property="Foreground" Value="{StaticResource descriptionForeground_light}" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="Padding" Value="8" />

        <Style.Triggers>
            <DataTrigger Binding="{Binding DataContext.IsDarkMode, RelativeSource={RelativeSource AncestorType=Page}, UpdateSourceTrigger=PropertyChanged}" Value="True">
                <DataTrigger.Setters>
                    <Setter Property="Foreground" Value="{StaticResource descriptionForeground_dark}" />
                </DataTrigger.Setters>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="noAnimesText" TargetType="TextBlock" BasedOn="{StaticResource animeLabel}">
        <Setter Property="Foreground" Value="{StaticResource noAnimesForeground_light}" />

        <Style.Triggers>
            <DataTrigger Binding="{Binding DataContext.IsDarkMode, RelativeSource={RelativeSource AncestorType=Page}, UpdateSourceTrigger=PropertyChanged}" Value="True">
                <DataTrigger.Setters>
                    <Setter Property="Foreground" Value="{StaticResource noAnimesForeground_dark}" />
                </DataTrigger.Setters>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    

</ResourceDictionary>